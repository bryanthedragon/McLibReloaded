package net.minecraft.data.worldgen.placement;

import java.util.List;
import net.minecraft.core.Direction;
import net.minecraft.core.Holder;
import net.minecraft.core.HolderGetter;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstrapContext;
import net.minecraft.data.worldgen.features.TreeFeatures;
import net.minecraft.resources.ResourceKey;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.placement.BiomeFilter;
import net.minecraft.world.level.levelgen.placement.BlockPredicateFilter;
import net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement;
import net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;
import net.minecraft.world.level.levelgen.placement.PlacementModifier;

public class TreePlacements {
    public static final ResourceKey<PlacedFeature> CRIMSON_FUNGI = PlacementUtils.createKey("crimson_fungi");
    public static final ResourceKey<PlacedFeature> WARPED_FUNGI = PlacementUtils.createKey("warped_fungi");
    public static final ResourceKey<PlacedFeature> OAK_CHECKED = PlacementUtils.createKey("oak_checked");
    public static final ResourceKey<PlacedFeature> DARK_OAK_CHECKED = PlacementUtils.createKey("dark_oak_checked");
    public static final ResourceKey<PlacedFeature> PALE_OAK_CHECKED = PlacementUtils.createKey("pale_oak_checked");
    public static final ResourceKey<PlacedFeature> PALE_OAK_CREAKING_CHECKED = PlacementUtils.createKey("pale_oak_creaking_checked");
    public static final ResourceKey<PlacedFeature> BIRCH_CHECKED = PlacementUtils.createKey("birch_checked");
    public static final ResourceKey<PlacedFeature> ACACIA_CHECKED = PlacementUtils.createKey("acacia_checked");
    public static final ResourceKey<PlacedFeature> SPRUCE_CHECKED = PlacementUtils.createKey("spruce_checked");
    public static final ResourceKey<PlacedFeature> MANGROVE_CHECKED = PlacementUtils.createKey("mangrove_checked");
    public static final ResourceKey<PlacedFeature> CHERRY_CHECKED = PlacementUtils.createKey("cherry_checked");
    public static final ResourceKey<PlacedFeature> PINE_ON_SNOW = PlacementUtils.createKey("pine_on_snow");
    public static final ResourceKey<PlacedFeature> SPRUCE_ON_SNOW = PlacementUtils.createKey("spruce_on_snow");
    public static final ResourceKey<PlacedFeature> PINE_CHECKED = PlacementUtils.createKey("pine_checked");
    public static final ResourceKey<PlacedFeature> JUNGLE_TREE_CHECKED = PlacementUtils.createKey("jungle_tree");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_CHECKED = PlacementUtils.createKey("fancy_oak_checked");
    public static final ResourceKey<PlacedFeature> MEGA_JUNGLE_TREE_CHECKED = PlacementUtils.createKey("mega_jungle_tree_checked");
    public static final ResourceKey<PlacedFeature> MEGA_SPRUCE_CHECKED = PlacementUtils.createKey("mega_spruce_checked");
    public static final ResourceKey<PlacedFeature> MEGA_PINE_CHECKED = PlacementUtils.createKey("mega_pine_checked");
    public static final ResourceKey<PlacedFeature> TALL_MANGROVE_CHECKED = PlacementUtils.createKey("tall_mangrove_checked");
    public static final ResourceKey<PlacedFeature> JUNGLE_BUSH = PlacementUtils.createKey("jungle_bush");
    public static final ResourceKey<PlacedFeature> SUPER_BIRCH_BEES_0002 = PlacementUtils.createKey("super_birch_bees_0002");
    public static final ResourceKey<PlacedFeature> SUPER_BIRCH_BEES = PlacementUtils.createKey("super_birch_bees");
    public static final ResourceKey<PlacedFeature> OAK_BEES_0002_LEAF_LITTER = PlacementUtils.createKey("oak_bees_0002_leaf_litter");
    public static final ResourceKey<PlacedFeature> OAK_BEES_002 = PlacementUtils.createKey("oak_bees_002");
    public static final ResourceKey<PlacedFeature> BIRCH_BEES_0002_PLACED = PlacementUtils.createKey("birch_bees_0002");
    public static final ResourceKey<PlacedFeature> BIRCH_BEES_0002_LEAF_LITTER = PlacementUtils.createKey("birch_bees_0002_leaf_litter");
    public static final ResourceKey<PlacedFeature> BIRCH_BEES_002 = PlacementUtils.createKey("birch_bees_002");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES_0002_LEAF_LITTER = PlacementUtils.createKey("fancy_oak_bees_0002_leaf_litter");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES_002 = PlacementUtils.createKey("fancy_oak_bees_002");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES = PlacementUtils.createKey("fancy_oak_bees");
    public static final ResourceKey<PlacedFeature> CHERRY_BEES_005 = PlacementUtils.createKey("cherry_bees_005");
    public static final ResourceKey<PlacedFeature> OAK_LEAF_LITTER = PlacementUtils.createKey("oak_leaf_litter");
    public static final ResourceKey<PlacedFeature> DARK_OAK_LEAF_LITTER = PlacementUtils.createKey("dark_oak_leaf_litter");
    public static final ResourceKey<PlacedFeature> BIRCH_LEAF_LITTER = PlacementUtils.createKey("birch_leaf_litter");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_LEAF_LITTER = PlacementUtils.createKey("fancy_oak_leaf_litter");
    public static final ResourceKey<PlacedFeature> FALLEN_OAK_TREE = PlacementUtils.createKey("fallen_oak_tree");
    public static final ResourceKey<PlacedFeature> FALLEN_BIRCH_TREE = PlacementUtils.createKey("fallen_birch_tree");
    public static final ResourceKey<PlacedFeature> FALLEN_SUPER_BIRCH_TREE = PlacementUtils.createKey("fallen_super_birch_tree");
    public static final ResourceKey<PlacedFeature> FALLEN_SPRUCE_TREE = PlacementUtils.createKey("fallen_spruce_tree");
    public static final ResourceKey<PlacedFeature> FALLEN_JUNGLE_TREE = PlacementUtils.createKey("fallen_jungle_tree");

    public static void bootstrap(BootstrapContext<PlacedFeature> p_330667_) {
        HolderGetter<ConfiguredFeature<?, ?>> holdergetter = p_330667_.lookup(Registries.CONFIGURED_FEATURE);
        Holder<ConfiguredFeature<?, ?>> holder = holdergetter.getOrThrow(TreeFeatures.CRIMSON_FUNGUS);
        Holder<ConfiguredFeature<?, ?>> holder1 = holdergetter.getOrThrow(TreeFeatures.WARPED_FUNGUS);
        Holder<ConfiguredFeature<?, ?>> holder2 = holdergetter.getOrThrow(TreeFeatures.OAK);
        Holder<ConfiguredFeature<?, ?>> holder3 = holdergetter.getOrThrow(TreeFeatures.DARK_OAK);
        Holder<ConfiguredFeature<?, ?>> holder4 = holdergetter.getOrThrow(TreeFeatures.PALE_OAK);
        Holder<ConfiguredFeature<?, ?>> holder5 = holdergetter.getOrThrow(TreeFeatures.PALE_OAK_CREAKING);
        Holder<ConfiguredFeature<?, ?>> holder6 = holdergetter.getOrThrow(TreeFeatures.BIRCH);
        Holder<ConfiguredFeature<?, ?>> holder7 = holdergetter.getOrThrow(TreeFeatures.ACACIA);
        Holder<ConfiguredFeature<?, ?>> holder8 = holdergetter.getOrThrow(TreeFeatures.SPRUCE);
        Holder<ConfiguredFeature<?, ?>> holder9 = holdergetter.getOrThrow(TreeFeatures.MANGROVE);
        Holder<ConfiguredFeature<?, ?>> holder10 = holdergetter.getOrThrow(TreeFeatures.CHERRY);
        Holder<ConfiguredFeature<?, ?>> holder11 = holdergetter.getOrThrow(TreeFeatures.PINE);
        Holder<ConfiguredFeature<?, ?>> holder12 = holdergetter.getOrThrow(TreeFeatures.JUNGLE_TREE);
        Holder<ConfiguredFeature<?, ?>> holder13 = holdergetter.getOrThrow(TreeFeatures.FANCY_OAK);
        Holder<ConfiguredFeature<?, ?>> holder14 = holdergetter.getOrThrow(TreeFeatures.MEGA_JUNGLE_TREE);
        Holder<ConfiguredFeature<?, ?>> holder15 = holdergetter.getOrThrow(TreeFeatures.MEGA_SPRUCE);
        Holder<ConfiguredFeature<?, ?>> holder16 = holdergetter.getOrThrow(TreeFeatures.MEGA_PINE);
        Holder<ConfiguredFeature<?, ?>> holder17 = holdergetter.getOrThrow(TreeFeatures.TALL_MANGROVE);
        Holder<ConfiguredFeature<?, ?>> holder18 = holdergetter.getOrThrow(TreeFeatures.JUNGLE_BUSH);
        Holder<ConfiguredFeature<?, ?>> holder19 = holdergetter.getOrThrow(TreeFeatures.SUPER_BIRCH_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> holder20 = holdergetter.getOrThrow(TreeFeatures.SUPER_BIRCH_BEES);
        Holder<ConfiguredFeature<?, ?>> holder21 = holdergetter.getOrThrow(TreeFeatures.OAK_BEES_0002_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder22 = holdergetter.getOrThrow(TreeFeatures.OAK_BEES_002);
        Holder<ConfiguredFeature<?, ?>> holder23 = holdergetter.getOrThrow(TreeFeatures.BIRCH_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> holder24 = holdergetter.getOrThrow(TreeFeatures.BIRCH_BEES_0002_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder25 = holdergetter.getOrThrow(TreeFeatures.BIRCH_BEES_002);
        Holder<ConfiguredFeature<?, ?>> holder26 = holdergetter.getOrThrow(TreeFeatures.FANCY_OAK_BEES_0002_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder27 = holdergetter.getOrThrow(TreeFeatures.FANCY_OAK_BEES_002);
        Holder<ConfiguredFeature<?, ?>> holder28 = holdergetter.getOrThrow(TreeFeatures.FANCY_OAK_BEES);
        Holder<ConfiguredFeature<?, ?>> holder29 = holdergetter.getOrThrow(TreeFeatures.CHERRY_BEES_005);
        Holder<ConfiguredFeature<?, ?>> holder30 = holdergetter.getOrThrow(TreeFeatures.OAK_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder31 = holdergetter.getOrThrow(TreeFeatures.DARK_OAK_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder32 = holdergetter.getOrThrow(TreeFeatures.BIRCH_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder33 = holdergetter.getOrThrow(TreeFeatures.FANCY_OAK_LEAF_LITTER);
        Holder<ConfiguredFeature<?, ?>> holder34 = holdergetter.getOrThrow(TreeFeatures.FALLEN_OAK_TREE);
        Holder<ConfiguredFeature<?, ?>> holder35 = holdergetter.getOrThrow(TreeFeatures.FALLEN_BIRCH_TREE);
        Holder<ConfiguredFeature<?, ?>> holder36 = holdergetter.getOrThrow(TreeFeatures.FALLEN_SUPER_BIRCH_TREE);
        Holder<ConfiguredFeature<?, ?>> holder37 = holdergetter.getOrThrow(TreeFeatures.FALLEN_SPRUCE_TREE);
        Holder<ConfiguredFeature<?, ?>> holder38 = holdergetter.getOrThrow(TreeFeatures.FALLEN_JUNGLE_TREE);
        PlacementUtils.register(p_330667_, CRIMSON_FUNGI, holder, CountOnEveryLayerPlacement.of(8), BiomeFilter.biome());
        PlacementUtils.register(p_330667_, WARPED_FUNGI, holder1, CountOnEveryLayerPlacement.of(8), BiomeFilter.biome());
        PlacementUtils.register(p_330667_, OAK_CHECKED, holder2, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, DARK_OAK_CHECKED, holder3, PlacementUtils.filteredByBlockSurvival(Blocks.DARK_OAK_SAPLING));
        PlacementUtils.register(p_330667_, PALE_OAK_CHECKED, holder4, PlacementUtils.filteredByBlockSurvival(Blocks.PALE_OAK_SAPLING));
        PlacementUtils.register(p_330667_, PALE_OAK_CREAKING_CHECKED, holder5, PlacementUtils.filteredByBlockSurvival(Blocks.PALE_OAK_SAPLING));
        PlacementUtils.register(p_330667_, BIRCH_CHECKED, holder6, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, ACACIA_CHECKED, holder7, PlacementUtils.filteredByBlockSurvival(Blocks.ACACIA_SAPLING));
        PlacementUtils.register(p_330667_, SPRUCE_CHECKED, holder8, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(p_330667_, MANGROVE_CHECKED, holder9, PlacementUtils.filteredByBlockSurvival(Blocks.MANGROVE_PROPAGULE));
        PlacementUtils.register(p_330667_, CHERRY_CHECKED, holder10, PlacementUtils.filteredByBlockSurvival(Blocks.CHERRY_SAPLING));
        BlockPredicate blockpredicate = BlockPredicate.matchesBlocks(Direction.DOWN.getUnitVec3i(), Blocks.SNOW_BLOCK, Blocks.POWDER_SNOW);
        List<PlacementModifier> list = List.of(
            EnvironmentScanPlacement.scanningFor(Direction.UP, BlockPredicate.not(BlockPredicate.matchesBlocks(Blocks.POWDER_SNOW)), 8),
            BlockPredicateFilter.forPredicate(blockpredicate)
        );
        PlacementUtils.register(p_330667_, PINE_ON_SNOW, holder11, list);
        PlacementUtils.register(p_330667_, SPRUCE_ON_SNOW, holder8, list);
        PlacementUtils.register(p_330667_, PINE_CHECKED, holder11, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(p_330667_, JUNGLE_TREE_CHECKED, holder12, PlacementUtils.filteredByBlockSurvival(Blocks.JUNGLE_SAPLING));
        PlacementUtils.register(p_330667_, FANCY_OAK_CHECKED, holder13, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, MEGA_JUNGLE_TREE_CHECKED, holder14, PlacementUtils.filteredByBlockSurvival(Blocks.JUNGLE_SAPLING));
        PlacementUtils.register(p_330667_, MEGA_SPRUCE_CHECKED, holder15, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(p_330667_, MEGA_PINE_CHECKED, holder16, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(p_330667_, TALL_MANGROVE_CHECKED, holder17, PlacementUtils.filteredByBlockSurvival(Blocks.MANGROVE_PROPAGULE));
        PlacementUtils.register(p_330667_, JUNGLE_BUSH, holder18, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, SUPER_BIRCH_BEES_0002, holder19, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, SUPER_BIRCH_BEES, holder20, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, OAK_BEES_0002_LEAF_LITTER, holder21, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, OAK_BEES_002, holder22, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, BIRCH_BEES_0002_PLACED, holder23, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, BIRCH_BEES_0002_LEAF_LITTER, holder24, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, BIRCH_BEES_002, holder25, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, FANCY_OAK_BEES_0002_LEAF_LITTER, holder26, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, FANCY_OAK_BEES_002, holder27, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, FANCY_OAK_BEES, holder28, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, CHERRY_BEES_005, holder29, PlacementUtils.filteredByBlockSurvival(Blocks.CHERRY_SAPLING));
        PlacementUtils.register(p_330667_, OAK_LEAF_LITTER, holder30, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, DARK_OAK_LEAF_LITTER, holder31, PlacementUtils.filteredByBlockSurvival(Blocks.DARK_OAK_SAPLING));
        PlacementUtils.register(p_330667_, BIRCH_LEAF_LITTER, holder32, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, FANCY_OAK_LEAF_LITTER, holder33, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, FALLEN_OAK_TREE, holder34, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(p_330667_, FALLEN_BIRCH_TREE, holder35, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, FALLEN_SUPER_BIRCH_TREE, holder36, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(p_330667_, FALLEN_SPRUCE_TREE, holder37, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(p_330667_, FALLEN_JUNGLE_TREE, holder38, PlacementUtils.filteredByBlockSurvival(Blocks.JUNGLE_SAPLING));
    }
}